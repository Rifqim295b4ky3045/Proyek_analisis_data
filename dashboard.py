{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "95862335-5dcf-4ddd-9cd9-f809fc2f46c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Step 1: Membaca data dari file CSV\n",
    "file_path_hour = '/submission/hour.csv'\n",
    "file_path_day = '/submission/day.csv'\n",
    "\n",
    "data_hour = pd.read_csv(file_path_hour)\n",
    "data_day = pd.read_csv(file_path_day)\n",
    "\n",
    "# Step 2: Mengubah kolom 'dteday' menjadi tipe datetime\n",
    "data_hour['dteday'] = pd.to_datetime(data_hour['dteday'])\n",
    "data_day['dteday'] = pd.to_datetime(data_day['dteday'])\n",
    "\n",
    "# Title\n",
    "st.title(\"Dashboard Bike Sharing\")\n",
    "\n",
    "# Sidebar untuk memilih dataset\n",
    "option = st.sidebar.selectbox(\n",
    "    \"Pilih Dataset\", \n",
    "    ('Hourly Data', 'Daily Data')\n",
    ")\n",
    "\n",
    "# Step 3: Visualisasi Tren berdasarkan dataset yang dipilih\n",
    "st.header(f\"Tren Penyewaan Sepeda ({option})\")\n",
    "\n",
    "if option == 'Hourly Data':\n",
    "    # Tren penyewaan sepeda per hari (hour.csv)\n",
    "    st.subheader(\"Jumlah Penyewaan Berdasarkan Hari (Hourly Data)\")\n",
    "    fig, ax = plt.subplots(figsize=(10, 6))\n",
    "    data_hour.groupby('dteday')['cnt'].sum().plot(ax=ax)\n",
    "    ax.set_xlabel('Date')\n",
    "    ax.set_ylabel('Number of Bike Rentals')\n",
    "    ax.set_title('Trend of Bike Rentals Over Time (Hourly Data)')\n",
    "    st.pyplot(fig)\n",
    "\n",
    "    # Rata-rata penyewaan per jam\n",
    "    st.subheader(\"Rata-rata Penyewaan per Jam (Hourly Data)\")\n",
    "    fig, ax = plt.subplots(figsize=(10, 6))\n",
    "    data_hour.groupby('hr')['cnt'].mean().plot(ax=ax)\n",
    "    ax.set_xlabel('Hour of Day')\n",
    "    ax.set_ylabel('Average Number of Bike Rentals')\n",
    "    ax.set_title('Average Bike Rentals per Hour (Hourly Data)')\n",
    "    st.pyplot(fig)\n",
    "\n",
    "    # Boxplot untuk hari kerja vs hari libur\n",
    "    st.subheader(\"Penyewaan Berdasarkan Hari Kerja dan Libur (Hourly Data)\")\n",
    "    fig, ax = plt.subplots(figsize=(8, 6))\n",
    "    sns.boxplot(x='workingday', y='cnt', data=data_hour, ax=ax)\n",
    "    ax.set_xlabel('Working Day (0: Non-working, 1: Working Day)')\n",
    "    ax.set_ylabel('Number of Bike Rentals')\n",
    "    ax.set_title('Bike Rentals on Working Days vs Non-Working Days')\n",
    "    st.pyplot(fig)\n",
    "\n",
    "elif option == 'Daily Data':\n",
    "    # Tren penyewaan sepeda per hari (day.csv)\n",
    "    st.subheader(\"Jumlah Penyewaan Berdasarkan Hari (Daily Data)\")\n",
    "    fig, ax = plt.subplots(figsize=(10, 6))\n",
    "    data_day.groupby('dteday')['cnt'].sum().plot(ax=ax)\n",
    "    ax.set_xlabel('Date')\n",
    "    ax.set_ylabel('Number of Bike Rentals')\n",
    "    ax.set_title('Trend of Bike Rentals Over Time (Daily Data)')\n",
    "    st.pyplot(fig)\n",
    "\n",
    "    # Boxplot untuk hari kerja vs hari libur\n",
    "    st.subheader(\"Penyewaan Berdasarkan Hari Kerja dan Libur (Daily Data)\")\n",
    "    fig, ax = plt.subplots(figsize=(8, 6))\n",
    "    sns.boxplot(x='workingday', y='cnt', data=data_day, ax=ax)\n",
    "    ax.set_xlabel('Working Day (0: Non-working, 1: Working Day)')\n",
    "    ax.set_ylabel('Number of Bike Rentals')\n",
    "    ax.set_title('Bike Rentals on Working Days vs Non-Working Days')\n",
    "    st.pyplot(fig)\n",
    "\n",
    "# Step 4: Korelasi\n",
    "st.header(\"Korelasi antara Variabel\")\n",
    "if option == 'Hourly Data':\n",
    "    correlation = data_hour[['workingday', 'holiday', 'cnt']].corr()\n",
    "    st.write(\"Correlation Matrix (Hourly Data):\")\n",
    "    st.write(correlation)\n",
    "\n",
    "elif option == 'Daily Data':\n",
    "    correlation = data_day[['workingday', 'holiday', 'cnt']].corr()\n",
    "    st.write(\"Correlation Matrix (Daily Data):\")\n",
    "    st.write(correlation)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
